package homework20210125;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.MultipleOutputs;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;
/**
 * Hadoop Homework 20210125
 * Topic : separating train time by on&off boarding
 * @author dhtmd
 *
 */


public class HadoopMain2 {
	public static void main(String[] args) throws Exception {
		/**
		 * Data Example
		 * "사용일자","노선명","역ID","역명","승차총승객수","하차총승객수","등록일자"
		 * "20201201","8호선","가락시장","7050","7931","20201204",""
		 * @author dhtmd
		 *
		 */
		String fileName = "train20210125.csv";
		String in = "infile/"+fileName;
		String out = "outfile/"+fileName.split(".")[0];
		Configuration conf = new Configuration();
		// job 이름 설정
		@SuppressWarnings("deprecation")
		Job job = new Job(new Configuration(), "HadoopMain2");

		// 입출력 데이터 경로 설정
		FileInputFormat.addInputPath(job, new Path(in));
		FileOutputFormat.setOutputPath(job, new Path(out));

		FileSystem hdfs = FileSystem.get(conf);
		if (hdfs.exists(new Path(out))) {
			hdfs.delete(new Path(out), true);// 출력파일의 경로 존재하는 경우 삭제
			System.out.println("[System log] 기존 출력파일 삭제");
		}
		// Job 클래스 설정
		job.setJarByClass(HadoopMain2.class);

		// Mapper 클래스 설정
		job.setMapperClass(HadoopMain2Mapper.class);

		// Reducer 클래스 설정
		job.setReducerClass(HadoopMain2Reducer.class);

		// 입출력 데이터 포멧 설정
		job.setInputFormatClass(TextInputFormat.class);
		job.setOutputFormatClass(TextOutputFormat.class);

		// 출력키 및 출력값 유형 설정
		job.setOutputKeyClass(Text.class);// 문자열 기반이라서, 결과값일때 1988.2 보다 1988.10이 더 앞섦
		job.setOutputValueClass(IntWritable.class);

		// multipleOutputs 설정
		MultipleOutputs.addNamedOutput(job, "onTrain", TextOutputFormat.class, Text.class, IntWritable.class);
		MultipleOutputs.addNamedOutput(job, "outTrain", TextOutputFormat.class, Text.class, IntWritable.class);
		job.waitForCompletion(true);

	}
}
