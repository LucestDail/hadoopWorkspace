package dataexpo.main;

import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

import dataexpo.Airline;
import dataexpo.mapreduce.DelayCounters;

public class DelayCountMapperWithMultipleOutputs extends Mapper<LongWritable, Text, Text, IntWritable> {
	private final static IntWritable ONE = new IntWritable(1);
	private Text outputKey = new Text();

	public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {
		if (key.get() == 0) {
			// 첫 줄 컬럼명칭 스킵
			return;
		}

		Airline airline = new Airline(value);
		if (airline.isDepartureDelayAvailable()) {
			if (airline.getDepartureDelayTime() > 0) {
				outputKey.set("D," + airline.getYear() + "," + airline.getMonth());
				context.write(outputKey, ONE);
			} else if (airline.getDepartureDelayTime() == 0) {
				context.getCounter(DelayCounters.scheduled_departure).increment(1);
			} else if (airline.getDepartureDelayTime() < 0) {
				context.getCounter(DelayCounters.early_departure).increment(1);
			}
		} else {
			context.getCounter(DelayCounters.not_available_departure).increment(1);
		}

		if (airline.isArriveDelayAvailable()) {
			if (airline.getArriveDelayTime() > 0) {
				outputKey.set("A," + airline.getYear() + "," + airline.getMonth());
				context.write(outputKey, ONE);
			} else if (airline.getArriveDelayTime() == 0) {
				context.getCounter(DelayCounters.scheduled_arrival).increment(1);
			} else if (airline.getArriveDelayTime() < 0) {
				context.getCounter(DelayCounters.early_arrival).increment(1);
			}
		} else {
			context.getCounter(DelayCounters.not_available_arrival).increment(1);
		}
	}
}
